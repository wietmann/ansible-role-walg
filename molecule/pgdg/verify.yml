---
- name: Verify
  hosts: all
  become: yes

  tasks:
    - name: Create backup
      shell: /usr/local/bin/wal-g backup-push /var/lib/pgsql/11/data
      become: yes
      become_user: postgres
      register: backup_status

    - name: Stop postgresql service
      systemd:
        name: postgresql-11
        state: stopped

    - name: Remove PGDATA
      file:
        path: /var/lib/pgsql/11/data
        state: absent

    - name: Create empty PGDATA
      file:
        path: /var/lib/pgsql/11/data
        state: directory
        owner: postgres
        group: postgres
        mode: 0700

    - name: Restore backup
      shell: /usr/local/bin/wal-g backup-fetch /var/lib/pgsql/11/data LATEST
      become: yes
      become_user: postgres

    - name: Create restore config
      copy:
        dest: /var/lib/pgsql/11/data/recovery.conf
        owner: postgres
        group: postgres
        mode: 0600
        content: |
          restore_command='/usr/local/bin/wal-g wal-fetch \"%f\" \"%p\" >> /var/log/wal-g/wal-fetch.log 2>&1'

    - name: Start postgresql service
      systemd:
        name: postgresql-11
        state: started

    - name: Wait a bit for recovery to complete
      pause:
        seconds: 30

    - name: Gather services state
      service_facts:

    - name: Check if recovery.done exists
      stat:
        path: /var/lib/pgsql/11/data/recovery.done
      register: recovery_done_state

    - name: Check if recovery is successfull
      assert:
        that:
          - recovery_done_state.stat.exists
          - services['postgresql-11.service'].state == 'running'
